#!/bin/bash

###########################################################################
# common
IP=172.17.88.8
MASK=24
GATEWAY=172.17.42.1
VERSION=5.2.1

# data and log
VOLUME_DATA=$HOME/appstore/tfs/gitlab-ci-runner/data
###########################################################################

VERSION=${VERSION:-"latest"};

if [ $# -lt 1 ]; then
    echo "Usage: tfs-gitlab-ci-runner run|start|stop|clean";
    exit 0;
fi

# 启动容器
function start_docker {
    sudo docker start tfs-gitlab-ci-runner;
    sudo pipework docker0 tfs-gitlab-ci-runner $IP/$MASK@$GATEWAY;
}

# 停止容器
function stop_docker {
    sudo docker stop tfs-gitlab-ci-runner;
}

# 创建容器+初始化+启动容器
function run_docker {
    #
    # 这里的--link名称别名必须是postgresql redisio
    #
    echo "run docker using image[hary/gitlab-ci-runner] version[$VERSION]";
    sudo docker run -i -t -d --name=tfs-gitlab-ci-runner --hostname=tfs-gitlab-ci-runner \
    -v $VOLUME_DATA:/home/gitlab_ci_runner/data \
    hary/gitlab-ci-runner:$VERSION;

    sudo pipework docker0 tfs-gitlab-ci-runner $IP/$MASK@$GATEWAY;
    echo "IP address is[$IP/$MASK] and gateway[$GATEWAY]";
}


#####################################################################################
# main
#####################################################################################
case $1 in
   # create container and initialize it and running
   run) run_docker;;

   # docker start
   start) start_docker;;

   # docker stop_docker
   stop) stop_docker;;

    # clean volume data
   clean) sudo rm -fr $VOLUME_DATA/* $VOLUME_LOG/* ;;
esac

